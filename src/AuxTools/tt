#!/bin/bash

########################################################################
#
#	tt - regression tests for iC
#
########################################################################

usage()
{
  echo "Usage: $name [-clASRiIJ6zh][ -y<opt>][ -x<regex>] <dir1>[ <dir2>]" >&2
  echo '	-y<opt>	call immcc with extra -d<opt> orred into normal -d474' >&2
  echo '	-c	only copy files to <dir1>; must be new, else compare only' >&2
  echo '	-l	list files which differ (default is full Mdiff output with -e)' >&2
  echo '	-x <regex> ignore changes in lines that match regex (after -l if used)' >&2
  echo '	-A	compile output ARITHMETIC ALIAS nodes for symbol debugging' >&2
  echo '	-S	strict compile - all immediate variables must be declared' >&2
  echo '	-R      no maximum error count (default: abort after 100 errors)' >&2
  echo '	-i	produce file.ini with load info but no INITIALIZATION' >&2
  echo '	-I	produce file.ini with load info and full INITIALIZATION' >&2
  echo '	-J	produce file.ini without load info but full INITIALIZATION' >&2
  echo '	-6	produce logic generation listing file.lst6 in Test2 etc' >&2
  echo '	-z	echo compiler calls with all options for debugging' >&2
  echo '	-h	this help text' >&2
  echo '	-	all further arguments are treated as files' >&2
  echo
  echo "	$name must be called from a directory, which has a number of" >&2
  echo "	sub-directories Test1, Test2, Test3 .. Test9 containg iC sources." >&2
  echo "	Each iC source is made with iCmake, generating different files." >&2
  echo
  echo "	<dir1> or <dir1>_<opt> are sub-directories of directory" >&2
  echo "	Test1, Test2, Test3 .. Test9 (however many exist)" >&2
  echo "	<dir1> will be created if it does not exist and generated" >&2
  echo "	files copied to it; if <dir1> exists, the generated files" >&2
  echo "	will be compared with files in <dir1> with Mdiff -ke" >&2
  echo "	If no <dir1> is specified no files will be copied or compared" >&2
  echo
  echo "	If <dir2> is specified all files in <dir1> will be" >&2
  echo "	compared with all files in <dir2> with Mdiff -ke" >&2
  echo
  echo "	If <dir2> is an absolute path, it must be the base of" >&2
  echo "	another set of directories Test1, Test2, Test3 .. Test9" >&2
  echo
  echo 'Author:	J.E. Wulff (john@je-wulff.de)' >&2
  echo '$Id: tt,v 1.14 2005/09/04 20:31:20 jw Exp $' >&2
}

########################################################################
#
#	main
#
########################################################################

name=${0##*/}
name=${name%.*}

v=""
y=""
l="e"
c=""
A=""
I=""
g=""
G=""

while [ $# -gt 0 ]; do
    case $1 in
    -)	shift; break;;
    -*)	option=${1#?}
	while [ -n "$option" ]; do
	    case $option in
	    c*)	c="c";;
	    y*)	option=${option#?}
		if [ -n "$option" ]; then
		    v="$v -y$option"
		    y="_$option"
		else
		    echo "-y must specify an option in $1" >&2
		    usage; exit 254;
		fi
		break;;
	    l*)	l="l";;
	    A*)	A="$A -A";;
	    S*)	A="$A -S";;
	    R*)	A="$A -R";;
	    i*) I=" -i";;
	    I*) I=" -I";;
	    J*) I=" -J";;
	    6*) g="6"; G=" -6";;
	    x*)	option=${option#?}
		if [ -z "$option" ]; then
		    shift
		    option=$1
		fi
		l="$l -x $option"
		break;;
	    z*)	v="$v -z";;
	    h*)	usage; exit 255;;
	    *)	x=${option#?}; option=${option%$x}
	    	echo "$name: unexpected option $option in $1" >&2
		usage; exit 254;;
	    esac
	    option=${option#?}
	done
	;;
    *)	break;;
    esac
    shift
done

d1=$1
d1=${d1%/}
d2=$2
d2=${d2%/}
d3=${d2#/}
if [ "$d2" = "$d3" ]; then
    # relative path
    d3="../$d2"
else
    # absolute path
    d3="$d2/\$t/$d1"
fi

echo; date
if [ -z "$y" -a -z "$c" -a -n "$d1" -a -z "$d2" ]; then
    echo; echo "========== Test0 make test"; echo
    time make test
fi

for t in Test1 Test9; do
    if [ -d "$t" ]; then
	cd $t
	if [ -z "$d2" ]; then
	    if [ -z "$c" ]; then
		rm -f $(cat pg.lt)
		echo; echo "========== $t mm$I$v$A"
		time mm$I$v$A
		ml
	    fi
	    if [ -n "$d1" ]; then
		if [ -d "$d1$y" ]; then
		    Rdiff p*.lt
		    echo; echo "========== $t Mdiff -k$l \$(cat pd.lt) $d1$y"
		    time Mdiff -k$l $(cat pd.lt) $d1$y
		else
		    mkdir $d1$y
		    echo; echo "========== $t cp -p \$(cat pd.lt) $d1$y"
		    cp -p $(cat pd.lt) $d1$y
		fi
	    fi
	elif [ -d "$d1$y" -a -d "$d2$y" ]; then
	    cd $d1$y
	    eval d4="$d3"
	    echo; echo "========== $t Mdiff -k$l $d1$y/* $d4$y"
	    time Mdiff -k$l $(cat ../pd.lt) $d4$y
	    cd ..
	else
	    echo "ERROR: if two <directories> are specified they must exist" >&2
	    usage
	fi
	cd ..
    fi
done

for t in Test2 Test3 Test4 Test5 Test6 Test7 Test8; do
    if [ -d "$t" ]; then
	cd $t
	if [ -z "$d2" ]; then
	    if [ -z "$c" ]; then
		rm -f $(cat p[g$g].lt)
		echo; echo "========== $t my$I$v$A$G"
		time my$I$v$A$G
		ml
	    fi
	    if [ -n "$d1" ]; then
		if [ -d "$d1$y" ]; then
		    Rdiff p*.lt
		    echo; echo "========== $t Mdiff -k$l \$(cat p[d$g].lt) $d1$y"
		    time Mdiff -k$l -x'ic[0-5]\.[A-Za-z0-9]' $(cat p[d$g].lt) $d1$y
		else
		    mkdir $d1$y
		    echo; echo "========== $t cp -p \$(cat p[d$g].lt) $d1$y"
		    cp -p $(cat p[d$g].lt) $d1$y
		fi
	    fi
	elif [ -d "$d1$y" -a -d "$d2$y" ]; then
	    cd $d1$y
	    eval d4="$d3"
	    echo; echo "========== $t Mdiff -k$l $d1$y/* $d4$y"
	    time Mdiff -k$l -x'ic[0-5]\.[A-Za-z0-9]' $(cat ../p[d$g].lt) $d4$y
	    cd ..
	else
	    echo "ERROR: if two <directories> are specified they must exist" >&2
	    usage
	fi
	cd ..
    fi
done
echo; echo "========== end"
