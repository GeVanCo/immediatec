#!/usr/bin/perl -w
########################################################################
#
#	Example 14-1 Simple UI Code
#	Sriram Srinivasan: Advanced Perl p. 224
#
########################################################################

use Tk;					# Slurp the module in
use Msg;
#use strict;

########################################################################
#
#	Connect to server
#
########################################################################

my $host = 'localhost';
my $port = 8080;

my $conn = Msg->connect($host, $port, \&rcvd_msg_from_server);
die "Client could not connect to $host:$port\n" unless $conn;
print "Connection successful.\n";

########################################################################
#
#	Create main window
#
########################################################################

my $top = MainWindow->new();
$top->title("Simple");
my $i = 0;

########################################################################
#
#	Generate many buttons
#
########################################################################

foreach my $color (qw(PeachPuff1 LightBlue1 SeaGreen2 Yellow1 PeachPuff1 LightBlue1 SeaGreen2 Yellow1)) {  
	my $button = $top->Button(
		-text    => $color,
		-width   => 10,
		-command => sub {
				$top->configure(-background => lc($color));
				$i++; print "Sending msg $i\n";
				$conn->send_now($color);
			    },
	);
	$button->pack(qw(-side top -expand yes -pady 2));
}

########################################################################
#
#	Idle execution
#
########################################################################

open (F, "/tmp/foo");
$top->fileevent(F, 'readable', \&read_file);

# my $idleR = $top->fileevent($conn->{sock}, 'readable', sub { });
# my $idleR = $top->fileevent($conn->{sock}, 'readable', \&empty);

########################################################################
#
#	Sit in an infinite loop dispatching incoming events.
#
########################################################################

# MainLoop;

while (Tk::MainWindow->Count) {
    DoOneEvent(0);
    print "#";
    Msg->event_loop(1);
}
print "Quit\n";
# my $idleR = $top->fileevent($conn->{sock}, 'readable', undef);
$conn->disconnect();
Msg->event_loop();

########################################################################
#
#	receive message from server
#
########################################################################

sub rcvd_msg_from_server {
    my ($conn, $msg, $err) = @_;
    if (defined $msg) {
        my $len = length ($msg);
        print "($len)\n";
    }
}

sub empty { }

sub read_file {
    my $buf;

    if (my $n = sysread(F, $buf, 4)) {
	print "$buf\n";
    } elsif (eof(F)) {
	$top->fileevent(F, 'readable', undef);
	print "EOF\n";
    } else {
	print "ERROR $n !!!\n";
	$top->fileevent(F, 'readable', undef);
    }
}
