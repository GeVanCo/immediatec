# @(#)$Id: Makefile.in,v 1.23 2002/07/08 13:00:16 jw Exp $

############################################################
#
#	Copyright (C) 1985-2001  John E. Wulff
#
#   You may distribute under the terms of either the GNU General Public
#   License or the Artistic License, as specified in the README file.
#
#   For more information about this program, or for information on how
#   to contact the author, see the README file or <john@je-wulff.de>
#
#	makefile for immediate C compilers and runtime library
#	J.E. Wulff	14-Mar-87
#
#	use GNU make	28-Jul-96
#	use GNU autoconf and configure	6-Mar-2001
#
#	to make ict, remove all objects and make with export OPT='-DTCP'
#	to make libict.a, remove all objects and make with export OPT='-DLOAD -DTCP'
#
#	auxiliary scripts makeAll, makeIct makeLib do this automatically
#
############################################################

#### Start of system configuration section. ####

srcdir = @srcdir@
VPATH = @srcdir@

CC = @CC@
AWK = @AWK@
LEX = @LEX@
LEXLIB = @LEXLIB@
YACC = @YACC@
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

CFLAGS = @CFLAGS@
CFLAGS_COMPILE_ONLY = -c -DYYDEBUG $(OPT)
LDFLAGS = @LDFLAGS@
YFLAGS = -d -v
O=o

LIBS = @LIBS@

prefix = @prefix@
exec_prefix = @exec_prefix@

# Where the installed binary goes.
bindir = @bindir@
binprefix =

mandir = @mandir@
manext = 1
manprefix =

#### End of system configuration section. ####

SHELL = /bin/sh

# This rule allows us to supply the necessary -D options
# in addition to whatever the user asks for.
.c.$(O):
	$(CC) -I. $(CFLAGS_COMPILE_ONLY) $(CPPFLAGS) $(CFLAGS) $<

###########################################################

COBJ =	comp.$(O) genr.$(O) init.$(O) symb.$(O) outp.$(O) cexe.$(O)
POBJ =	link.$(O) rsff.$(O) scan.$(O)

#### Standalone versions ###################################

all:
	@$(srcdir)/makeAll $(srcdir)/

quiet:
	@$(srcdir)/makeAll -q $(srcdir)/

icc:	$(srcdir)/Makefile main.$(O) scid.$(O) icc.$(O) $(COBJ) $(POBJ)
	$(CC) $(LDFLAG) -o icc main.$(O) scid.$(O) icc.$(O) $(COBJ) $(POBJ)

ict:	$(srcdir)/Makefile main.$(O) scid.$(O) ict.$(O) tcpc.$(O) $(COBJ) $(POBJ)
	$(CC) $(LDFLAG) -o ict main.$(O) scid.$(O) ict.$(O) tcpc.$(O) $(COBJ) $(POBJ)

libict.a:	$(srcdir)/Makefile load.$(O) scid.$(O) ict.$(O) tcpc.$(O) $(POBJ)
	ar -rv libict.a load.$(O) scid.$(O) ict.$(O) tcpc.$(O) $(POBJ)

lmain:	$(srcdir)/Makefile lmain.$(O) gram.$(O) lexc.$(O)
	$(CC) $(LDFLAG) -o lmain lmain.$(O) lexc.$(O) gram.$(O)

#### Compile objects #######################################

.l.c:
    ifneq ($(LEX),)
	rm -f $@
	lex -t $< | sed -f $(srcdir)/$*.sed > $@
	chmod -w $@
    else
	@echo "System has no lex or flex - install one of them"
	@echo "Otherwise do not modify $< - use $@ in distribution"
	test -f $@ && touch $@
    endif

.y.c:
    ifneq ($(YACC),)
	$(SHELL) -ec 'if [ -f $(*)_tab.h ]; then mv -f $(*)_tab.h y.tab.t; fi'
	rm -f y.tab.c $@
	$(YACC) $(YFLAGS) $<
	sed -f $(srcdir)/$*.sed y.tab.c > $@
	sed -f $(srcdir)/$*.sed y.tab.h > $(*)_tab.h
	$(SHELL) -ec 'if cmp -s $(*)_tab.h y.tab.t; then mv y.tab.t $(*)_tab.h; fi'
	rm -f y.tab.t y.tab.h y.tab.c
	chmod -w $(*)_tab.h $@
	mv y.output $*.output
    else
	@echo "System has no yacc, bison or byacc - install one of them"
	@echo "Otherwise do not modify $< - use $@ and $(*)_tab.h in distribution"
	test -f $@ && touch $@
    endif

scid.c:	icc.v $(srcdir)/Makefile pawk.a comp.sed
	rm -f scid.c; ident $(srcdir)/icc.v $(srcdir)/Makefile $(srcdir)/comp.sed | grep '$Id' | $(AWK) -f $(srcdir)/pawk.a > scid.c; chmod -w scid.c

cexe.c:	$(srcdir)/cexe.h
	sed -e '/^[A-Z]$$/s///' $(srcdir)/cexe.h > cexe.c
	cp -f cexe.c cexe.c_empty

$(srcdir)/comp.c:	$(srcdir)/comp.y

$(srcdir)/gram.c:	$(srcdir)/gram.y

$(srcdir)/lexc.c:	$(srcdir)/lexc.l

test:
	@echo "compile and generate all executables from iC files in ${srcdir}/Test ..."
	@-${srcdir}/iCmake -iv ${srcdir}/Test/*.ic > ${srcdir}/Test/ErrorMessages.err 2>&1
	@echo "diffing generated files in ${srcdir}/Test with originals in ${srcdir}/Test/ORG ..."
	@if ${srcdir}/Mdiff -kle ${srcdir}/Test/*.* ${srcdir}/Test/ORG; then echo "test OK"; if ! ${srcdir}/iCserver -h 2> /dev/null; then echo "- suggest you install Time::HiRes as described in the README followed by"; fi; echo "- make install as su"; else echo "test FAILED - differences in listed files and ${srcdir}/Test/ORG"; fi

install:	installdirs
	$(srcdir)/perlinstall -t $(srcdir)
	${INSTALL_PROGRAM} Msg.pm   `$(srcdir)/perlinstall`/Msg.pm
	${INSTALL_PROGRAM} icc      ${bindir}/${binprefix}icc
	${INSTALL_PROGRAM} ict      ${bindir}/${binprefix}ict
	${INSTALL_PROGRAM} iCbox    ${bindir}/${binprefix}iCbox
	${INSTALL_PROGRAM} iClive   ${bindir}/${binprefix}iClive
	${INSTALL_PROGRAM} iCmake   ${bindir}/${binprefix}iCmake
	${INSTALL_PROGRAM} iCserver ${bindir}/${binprefix}iCserver
	${INSTALL_PROGRAM} pplstfix ${bindir}/${binprefix}pplstfix
	${INSTALL_DATA}    libict.a ${prefix}/lib/libict.a
	${INSTALL_DATA}    icc.h    ${prefix}/include/icc.h

installdirs:	${srcdir}/mkinstalldirs
	${srcdir}/mkinstalldirs ${bindir} ${prefix}/lib ${prefix}/include

uninstall:
	$(srcdir)/perlinstall -r $(srcdir)
	rm -f `$(srcdir)/perlinstall`/Msg.pm
	rm -f ${bindir}/${binprefix}icc
	rm -f ${bindir}/${binprefix}ict
	rm -f ${bindir}/${binprefix}iCbox
	rm -f ${bindir}/${binprefix}iClive
	rm -f ${bindir}/${binprefix}iCmake
	rm -f ${bindir}/${binprefix}iCserver
	rm -f ${bindir}/${binprefix}pplstfix
	rm -f ${prefix}/lib/libict.a
	rm -f ${prefix}/include/icc.h

clean:
	rm -rf *.$(O) comp.c gram.c lexc.c LoadObjs PptcObjs cexe.c* scid.c core icc ict libict.a

distclean: clean
	rm -f Makefile config.status config.log config.cache

distribution:
	@rev=`grep 'icc\.v,v' ${srcdir}/icc.v | awk '{ print $$3; }'`; echo "making icc_$$rev.tgz"; cd ${srcdir}/../..; tar -czhf icc_$$rev.tgz `sed -n -e '/^[a-z_A-Z]/ s/^/'icc_$$rev'\//p' icc_$$rev/src/manifest`; cd -;

genr.$(O):	$(srcdir)/icc.h $(srcdir)/comp.h comp_tab.h
init.$(O):	$(srcdir)/icc.h $(srcdir)/comp.h comp_tab.h
symb.$(O):	$(srcdir)/icc.h $(srcdir)/comp.h comp_tab.h

comp.$(O):	$(srcdir)/icc.h $(srcdir)/comp.h
main.$(O):	$(srcdir)/icc.h $(srcdir)/comp.h
outp.$(O):	$(srcdir)/icc.h $(srcdir)/comp.h
cexe.$(O):	$(srcdir)/icc.h $(srcdir)/comp.h

ict.$(O):	$(srcdir)/icc.h $(srcdir)/tcpc.h
load.$(O):	$(srcdir)/icc.h $(srcdir)/tcpc.h

icc.$(O):	$(srcdir)/icc.h
link.$(O):	$(srcdir)/icc.h
rsff.$(O):	$(srcdir)/icc.h
scan.$(O):	$(srcdir)/icc.h

gram.$(O):	$(srcdir)/gram.h
lexc.$(O):	$(srcdir)/gram.h gram_tab.h
lmain.$(O):	$(srcdir)/gram.h
