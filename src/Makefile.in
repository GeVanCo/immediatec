# @(#)$Id: Makefile.in,v 1.43 2005/01/28 13:23:14 jw Exp $

############################################################
#
#	Copyright (C) 1985-2005  John E. Wulff
#
#   You may distribute under the terms of either the GNU General Public
#   License or the Artistic License, as specified in the README file.
#
#   For more information about this program, or for information on how
#   to contact the author, see the README file or <john@je-wulff.de>
#
#	Makefile for immediate C compilers and runtime library
#	J.E. Wulff	14-Mar-87
#
#	use GNU make	28-Jul-96
#	use GNU autoconf and configure	6.Mar.2001
#	use GNU make pattern rules instead of suffix rules 3.Jan.2005
#
#	to make icc, make with OPT=''
#	to make icr, make with OPT='-DRUN -DYYDEBUG'
#	to make ict, remove all objects and make with OPT='-DTCP'
#	to make libict.a, remove all objects and make with OPT='-DLOAD -DTCP'
#	to make lmain, remove all objects and make with OPT='-DLMAIN -DYYDEBUG'
#
#	auxiliary script makeAll -rm called for all: does this automatically
#
############################################################

#### Start of system configuration section. ####

srcdir = @srcdir@
VPATH = @srcdir@

CC = @CC@
AWK = @AWK@
LEX = @LEX@
LEXLIB = @LEXLIB@
YACC = @YACC@
ifeq ($(YACC),yacc)
Y = -DYACC
else
Y =
endif
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

CFLAGS = @CFLAGS@
CFLAGS_COMPILE_ONLY = -c $(OPT) $(Y)
LDFLAGS = @LDFLAGS@
YFLAGS = -d -v
O=o

ifeq ($(findstring EFENCE,$(OPT)),EFENCE)
EL = -lefence
else
EL =
endif

LIBS = @LIBS@

prefix = @prefix@
exec_prefix = @exec_prefix@

# Where the installed binary goes.
bindir = @bindir@
binprefix =

mandir = @mandir@
manext = 1
manprefix =

#### End of system configuration section. ####

SHELL = /bin/sh

# This rule allows us to supply the necessary -D options
# in addition to whatever the user asks for.
%.$(O):	%.c
	$(CC) -I. $(CFLAGS_COMPILE_ONLY) $(CPPFLAGS) $(CFLAGS) $<

###########################################################

COBJ =	comp.$(O) genr.$(O) init.$(O) symb.$(O) outp.$(O) gram.$(O) lexc.$(O)
POBJ =	link.$(O) rsff.$(O) scan.$(O)

#### Standalone versions ###################################
#### make icr and lmain with YYDEBUG, since they need it for normal operation

all:
	@$(srcdir)/makeAll -rm -o$(O)

quiet:
	@$(srcdir)/makeAll -qrm -o$(O)

icc:	$(srcdir)/Makefile main.$(O) misc.$(O) scid.$(O) $(COBJ)
	$(CC) $(LDFLAGS) -o icc main.$(O) misc.$(O) scid.$(O) $(COBJ) $(EL)

icr:	$(srcdir)/Makefile main.$(O) misc.$(O) scid.$(O) icc.$(O) cexe.$(O) $(COBJ) $(POBJ)
	$(CC) $(LDFLAGS) -o icr main.$(O) misc.$(O) scid.$(O) icc.$(O) cexe.$(O) $(COBJ) $(POBJ) $(EL)

ict:	$(srcdir)/Makefile main.$(O) misc.$(O) scid.$(O) ict.$(O) cexe.$(O) tcpc.$(O) $(COBJ) $(POBJ)
	$(CC) $(LDFLAGS) -o ict main.$(O) misc.$(O) scid.$(O) ict.$(O) cexe.$(O) tcpc.$(O) $(COBJ) $(POBJ) $(EL)

#### Run-time library ######################################

libict.a:	$(srcdir)/Makefile load.$(O) misc.$(O) scid.$(O) ict.$(O) tcpc.$(O) $(POBJ)
	ar -rv libict.a load.$(O) misc.$(O) scid.$(O) ict.$(O) tcpc.$(O) $(POBJ)

#### C-parser test #########################################

lmain:	$(srcdir)/Makefile lmain.$(O) misc.$(O) gram.$(O) lexc.$(O) symb.$(O)
	$(CC) $(LDFLAGS) -o lmain lmain.$(O) misc.$(O) gram.$(O) lexc.$(O) symb.$(O) $(EL)

#### Compile objects #######################################

%.c:	%.l
    ifneq ($(LEX),)
	rm -f $@
	$(LEX) -t $< | sed -f $(srcdir)/gram.sed > $@
	chmod -w $@
    else
	@echo "System has no lex or flex - install one of them"
	@echo "Otherwise do not modify $< - use $@ in distribution"
	test -f $@ && touch $@
    endif

%.c:	%.y
    ifneq ($(YACC),)
	$(SHELL) -ec 'if [ -f $(*)_tab.h ]; then mv -f $(*)_tab.h y.tab.t; fi'
	rm -f y.tab.c $@
	$(YACC) $(YFLAGS) $<
	sed -f $(srcdir)/$*.sed y.tab.c > $@
	sed -f $(srcdir)/$*.sed y.tab.h > $(*)_tab.h
	$(SHELL) -ec 'if cmp -s $(*)_tab.h y.tab.t; then mv y.tab.t $(*)_tab.h; fi'
	rm -f y.tab.t y.tab.h y.tab.c
	chmod -w $(*)_tab.h $@
	mv y.output $*.output
    else
	@echo "System has no yacc, bison or byacc - install one of them"
	@echo "Otherwise do not modify $< - use $@ and $(*)_tab.h in distribution"
	test -f $@ && touch $@
    endif

%.1.gz:	%
	@pod2man -n $< -c 'iC Project Documentation' -r 'icc.v 1.107'  $< > $*.1
	@gzip -f $*.1

$(srcdir)/scid.c:	$(srcdir)/Makefile.in $(srcdir)/pawk.a $(srcdir)/comp.sed $(srcdir)/gram.sed $(srcdir)/pplstfix $(srcdir)/../README
	rm -f $(srcdir)/scid.c; ident $(srcdir)/icc.v $(srcdir)/Makefile.in $(srcdir)/comp.sed $(srcdir)/gram.sed $(srcdir)/pplstfix | $(AWK) -f $(srcdir)/pawk.a > $(srcdir)/scid.c; chmod -w $(srcdir)/scid.c

$(srcdir)/../README:	$(srcdir)/icc.v $(srcdir)/README.tpl
	ident $(srcdir)/icc.v | $(srcdir)/README.tpl > $(srcdir)/../README;

$(srcdir)/comp.c:	$(srcdir)/comp.y $(srcdir)/comp.sed

$(srcdir)/gram.c:	$(srcdir)/gram.y $(srcdir)/gram.sed

$(srcdir)/lexc.c:	$(srcdir)/lexc.l $(srcdir)/gram.sed

icc.1.gz:	main.c
	@pod2man -n icc -c 'iC Project Documentation' -r 'icc.v 1.107'  $< > icc.1
	@gzip -f icc.1

iCbox.1.gz:	iCbox

iClive.1.gz:	iClive

iCserver.1.gz:	iCserver

iCmake.1.gz:	iCmake

makeAll.1.gz:	makeAll

test:
	@echo "compile and generate all executables from iC files in ${srcdir}/Test0 ..."
	@-${srcdir}/iCmake -Aiv ${srcdir}/Test0/*.ic 2>&1 | sed '/^\/tmp\/[a-z_A-Z][a-z_A-Z0-9]*\.o\((\.data+0x[0-9a-f]*)\)*:/ s//\/tmp\/x.o:/' > ${srcdir}/Test0/ErrorMessages.err
	@echo "diffing generated files in ${srcdir}/Test0 with originals in ${srcdir}/Test0/ORG ..."
	@if ${srcdir}/Mdiff -kl ${srcdir}/Test0/*.* ${srcdir}/Test0/ORG; then echo "test OK"; if ! ${srcdir}/iCserver -h 2> /dev/null; then echo "- suggest you install Time::HiRes as described in the README followed by"; fi; echo "- make install as su"; else echo "test FAILED - differences in listed files and ${srcdir}/Test0/ORG"; fi

install:	installdirs icc.1.gz iCbox.1.gz iClive.1.gz iCserver.1.gz iCmake.1.gz makeAll.1.gz
	$(srcdir)/perlinstall -t $(srcdir)
	${INSTALL_PROGRAM} Msg.pm    `$(srcdir)/perlinstall`/Msg.pm
	${INSTALL_PROGRAM} icc        ${bindir}/${binprefix}icc
	${INSTALL_PROGRAM} icr        ${bindir}/${binprefix}icr
	${INSTALL_PROGRAM} ict        ${bindir}/${binprefix}ict
	${INSTALL_PROGRAM} iCbox      ${bindir}/${binprefix}iCbox
	${INSTALL_PROGRAM} iClive     ${bindir}/${binprefix}iClive
	${INSTALL_PROGRAM} iCmake     ${bindir}/${binprefix}iCmake
	${INSTALL_PROGRAM} iCserver   ${bindir}/${binprefix}iCserver
	${INSTALL_PROGRAM} pplstfix   ${bindir}/${binprefix}pplstfix
	${INSTALL_DATA} libict.a      ${prefix}/lib/libict.a
	${INSTALL_DATA} icg.h         ${prefix}/include/icg.h
	${INSTALL_DATA} icg.h         ${prefix}/include/icc.h
	${INSTALL_DATA} icc.1.gz      ${prefix}/man/man1/icc.1.gz
	${INSTALL_DATA} iCbox.1.gz    ${prefix}/man/man1/iCbox.1.gz
	${INSTALL_DATA} iClive.1.gz   ${prefix}/man/man1/iClive.1.gz
	${INSTALL_DATA} iCserver.1.gz ${prefix}/man/man1/iCserver.1.gz
	${INSTALL_DATA} iCmake.1.gz   ${prefix}/man/man1/iCmake.1.gz
	${INSTALL_DATA} makeAll.1.gz   ${prefix}/man/man1/makeAll.1.gz

installdirs:	${srcdir}/mkinstalldirs
	${srcdir}/mkinstalldirs ${bindir} ${prefix}/lib ${prefix}/include

uninstall:
	$(srcdir)/perlinstall -r $(srcdir)
	rm -f `$(srcdir)/perlinstall`/Msg.pm
	rm -f ${bindir}/${binprefix}icc
	rm -f ${bindir}/${binprefix}icr
	rm -f ${bindir}/${binprefix}ict
	rm -f ${bindir}/${binprefix}iCbox
	rm -f ${bindir}/${binprefix}iClive
	rm -f ${bindir}/${binprefix}iCmake
	rm -f ${bindir}/${binprefix}iCserver
	rm -f ${bindir}/${binprefix}pplstfix
	rm -f ${prefix}/lib/libict.a
	rm -f ${prefix}/include/icg.h
	rm -f ${prefix}/include/icc.h
	rm -f ${prefix}/man/man1/icc.1.gz
	rm -f ${prefix}/man/man1/iCbox.1.gz
	rm -f ${prefix}/man/man1/iClive.1.gz
	rm -f ${prefix}/man/man1/iCserver.1.gz
	rm -f ${prefix}/man/man1/makeAll.1.gz

clean:
	rm -rf *.$(O) comp.c gram.c lexc.c IcrObjs IctObjs LibObjs LmainObjs cexe.c scid.c core icc icr ict libict.a lmain *.1.gz

distclean: clean
	rm -f Makefile config.status config.log config.cache

distribution:
	@rev=`grep 'icc\.v,v' ${srcdir}/icc.v | awk '{ print $$3; }'`; echo "making icc_$$rev.tgz"; cd ${srcdir}/../..; tar -czhf icc_$$rev.tgz `sed -n -e '/^[a-z_A-Z]/ s/^/'icc_$$rev'\//p' icc_$$rev/src/manifest`; cd -;

genr.$(O):	$(srcdir)/icg.h $(srcdir)/icc.h $(srcdir)/comp.h comp_tab.h
init.$(O):	$(srcdir)/icg.h $(srcdir)/icc.h $(srcdir)/comp.h comp_tab.h
symb.$(O):	$(srcdir)/icg.h $(srcdir)/icc.h $(srcdir)/comp.h comp_tab.h

comp.$(O):	$(srcdir)/icg.h $(srcdir)/icc.h $(srcdir)/comp.h
main.$(O):	$(srcdir)/icg.h $(srcdir)/icc.h $(srcdir)/comp.h $(srcdir)/cexe.h
outp.$(O):	$(srcdir)/icg.h $(srcdir)/icc.h $(srcdir)/comp.h
cexe.$(O):	$(srcdir)/icg.h $(srcdir)/icc.h $(srcdir)/comp.h

ict.$(O):	$(srcdir)/icg.h $(srcdir)/icc.h $(srcdir)/tcpc.h
load.$(O):	$(srcdir)/icg.h $(srcdir)/icc.h $(srcdir)/tcpc.h

icc.$(O):	$(srcdir)/icg.h $(srcdir)/icc.h
link.$(O):	$(srcdir)/icg.h $(srcdir)/icc.h
rsff.$(O):	$(srcdir)/icg.h $(srcdir)/icc.h
scan.$(O):	$(srcdir)/icg.h $(srcdir)/icc.h

gram.$(O):	$(srcdir)/icg.h $(srcdir)/icc.h $(srcdir)/comp.h
lexc.$(O):	$(srcdir)/icg.h $(srcdir)/icc.h $(srcdir)/comp.h gram_tab.h
lmain.$(O):	$(srcdir)/icg.h $(srcdir)/icc.h $(srcdir)/comp.h

misc.$(O):	$(srcdir)/icg.h $(srcdir)/icc.h
