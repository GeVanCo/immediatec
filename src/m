#!/bin/bash

usage()
{
    echo "Make iC components immcc and libict.a for debugging and optionally install them" >&2
    echo "Usage $name[ -clSPrtmgpuedsyzIih][ -D<OPT>][ -W<OPT>][[ <iCmake_options>] <iC_sources>]" >&2
    echo '		with no clSPrtm flags make immcc, libict.a and libict.so' >&2
    echo '	-c	make immediate C compiler immcc' >&2
    echo '	-l	make immediate C static library libict.a' >&2
    echo '	-S	make immediate C shared library libict.so' >&2
    echo '	-P	make iCpiFace for RASPBERRYPI PiFace with YYDEBUG only' >&2
    echo '	-G	make iCgpioPUD for RASPBERRYPI as SUID auxiliary program' >&2
    echo '	-V	make iCpiPWM for RASPBERRYPI as SUID PWM and serVo program' >&2
    echo '	-r	make standalone interpreter icr' >&2
    echo '	-t	make standalone interpreter ict' >&2
    echo '	-m	make standalone internal C compiler lmain' >&2
    echo '	-g	compile for debugging and no optimisation (default -O2)' >&2
    echo '	-p	compile and link for profiling with gprof (-pg)' >&2
    echo '	-u	make any compiler targets with Symbol SYUNION option' >&2
    echo '	-e	make all targets with EFENCE option and link with -lefence' >&2
    echo '	-d	make with DEQ - double ended queues are slightly faster' >&2
    echo '	-s	make with INT_MAX=32767' >&2
    echo '		(on a 16 bit system INT_MAX is 32767 and -s is not required)' >&2
    echo '		simulates compilation for a 16 bit system, which does' >&2
    echo '		no 32 bit arithmetic and rejects QL.. and IL.. I/O unless' >&2
    echo '	-y	make with LONG16' >&2
    echo '		produces code for long int arithmetic on a 16 bit system' >&2
    echo '	-z	echo compiler calls with all options for debugging' >&2
    echo '	-D<OPT>	make all targets with <OPT> defined' >&2
    echo '	-W<OPT>	compile all C sources with -W<OPT> (useful for -Wall)' >&2
    echo "	-I	execute chmod +s /usr/bin/install /usr/bin/ranlib as su once" >&2
    echo "		this is required to run make install as an ordinary user" >&2
    echo '	-i	make install after makeAll' >&2
    echo '	-h	this help text' >&2
    echo '	NOTE: if any option is changed, make clean is automatically executed' >&2
    echo "	<iC_sources>  list of iC source files which will be made with iCmake" >&2
    echo 'Author:	John E. Wulff        <immediateC@gmail.com>' >&2
    echo '$Id: m,v 1.19 2015/09/29 07:32:32 jw Exp $' >&2
}

name=${0##*/}
clSrtm=''
pudsyez=''
dw=''
i=''
P=''
G=''
V=''
z=0
o=''

while getopts ":clSPGVrtmpudsyezD:W:Iih" opt; do
    case $opt in
    c ) clSrtm="${clSrtm}c";;
    l ) clSrtm="${clSrtm}l";;
    S ) clSrtm="${clSrtm}S";;
    r ) clSrtm="${clSrtm}r";;
    t ) clSrtm="${clSrtm}t";;
    m ) clSrtm="${clSrtm}m";;
    p ) pudsyez="${pudsyez}p";;
    u ) pudsyez="${pudsyez}u";;
    d ) pudsyez="${pudsyez}d";;
    s ) pudsyez="${pudsyez}s";;
    y ) pudsyez="${pudsyez}y";;
    e ) pudsyez="${pudsyez}e";;
    z )	pudsyez="${pudsyez}z";z=1;;
    D ) dw="$dw -D$OPTARG";;
    W ) dw="$dw -W$OPTARG";;
    P ) P="P";;
    G ) G="G";;
    V ) V="V";;
    I )
	echo "Enter root:" >&2
	sudo chmod +s /usr/bin/install /usr/bin/ranlib
	echo "chmod +s /usr/bin/install /usr/bin/ranlib" >&2
	echo "Exit  root:" >&2
	sudo -k
	exit
	;;
    i )	i="install";;
    h )	usage; exit 127;;
    \?)	echo "$name: illegal option '-$OPTARG'"; usage; exit 127;;
    esac
done
shift $(($OPTIND - 1))

if [ -n "$P" -o -n "$G" -o -n "$V" ]; then
    echo "### make iCpiFace and/or iCgpioPUD and/or iCpiPWM"
    makeAll -qg$P$G$V$pudsyez$dw
elif [ -z "$clSrtm" ]; then
    clSrtm="cl"
fi

if [ -n "$clSrtm" ]; then
    echo "### makeAll -qg$clSrtm$pudsyez$dw"
    makeAll -qg$clSrtm$pudsyez$dw
fi

if [ -n "$i" ]; then
    if [ -x /bin/uname ]; then
	cpu=`/bin/uname -m`
	if [[ "$cpu" =~ "armv" ]]; then
	    echo "### make iCpiFace, iCpiPUD and iCgpioPWM"
	    makeAll -qgPGV$pudsyez$dw
	    o=" OPT=\"-DRASPBERRYPI\""
	fi
    fi
    echo "### make$o install"
    make$o install
fi
