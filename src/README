
                         immediateC, iC rev 1.61

                    Copyright (C) 1985-2001, John E. Wulff
                            All rights reserved.

    This program is free software; you can redistribute it and/or modify
    it under the terms of either:

        a) the GNU General Public License as published by the Free
        Software Foundation; either version 2, or (at your option) any
        later version, or

        b) the "Artistic License" which comes with this Kit.

    This program is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See either the
    GNU General Public License or the Artistic License for more details.

    You should have received a copy of the Artistic License with this
    Kit, in the file named "Artistic". If not, I'll be glad to provide one.

    You should also have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software Foundation,
    Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

    For those of you that choose to use the GNU General Public License,
    my interpretation of the GNU General Public License is that no iC
    source falls under the terms of the GPL unless you explicitly put
    said source under the terms of the GPL yourself.  Furthermore, any
    object code linked with iC does not automatically fall under the
    terms of the GPL, provided such object code only adds definitions
    of subroutines and variables, and does not otherwise impair the
    resulting interpreter from executing any standard iC source.  I
    consider linking in C subroutines in this manner to be the moral
    equivalent of defining subroutines in the iC language itself.  You
    may sell such an object file as proprietary provided that you provide
    or offer to provide the iC source, as specified by the GNU General
    Public License.  (This is merely an alternate way of specifying input
    to the program.)  You may also sell a binary produced by compiling an
    iC source that belongs to you with the iC compiler and linking it with
    the iC runtime library, provided that you provide or offer to provide
    the iC source as specified by the GPL. (The fact that the iC runtime
    library and your code are in the same binary file is, in this case,
    a form of mere aggregation.) This is my interpretation of the GPL.
    If you still have concerns or difficulties understanding my intent,
    feel free to contact me at <john.wulff@inka.de>.

    Of course, the Artistic License spells all this out for your protection,
    so you may prefer to use that.

    Acknowledgements to Larry Wall, whose README I used as a template.
                                    and for Perl - which is just great.

    Acknowledgements to Nick Ing-Simmons for Perl-Tk - which is smooth.

    Acknowledgements to Linus Torvalds and the Open-Software community
                                    for Linux(R) - which is something else. 

--------------------------------------------------------------------------

        Notes for the installation of icc rev 1.61

        1)  unpack the archive in a suitable working directory with
                tar -xvzf icc_1.61.tgz

        2)  cd icc_1.61/src

        3)  excute the following scripts
                configure  OR    ./configure # if super user
                make      OR  makeall -e # to see all intermediate steps

            this should build the files
                icc
                ict
                libict.a
            without any errors

        4)  to install the compiler execute the following as super user

                su              ### Password  ###
                make install
                exit            ### IMPORTANT ###

            this copies the essential executables to /usr/local/bin
            it also copies the include file icc.h to /usr/local/include
            libict.a to /usr/local/lib and Msg.pm to /usr/lib/perl5/site...

        5)  change to directory Test and compile a0.ic with ICMake

                cd Test
                ICMake a0.ic

            This should make a0 a0.lst a0.c and a0.ini
                a0      is the executable
                a0.lst  is a listing
                a0.c    is the C source
                a0.ini  was used by me for testing. It is the initialisation
                        output when executing a0 and is useful for comparing
                        different versions of the compiler.

        6)  If Perl/Tk is installed on the system the following starts
            a very simple demonstration:

                ICServer 'DemoBox X0' a0

            A DemoBox with 8 inputs and 8 outputs is drawn.
            Input IX0.0 can be turned on and off.
            Output QX0.0 should follow the input, since program a0.ic
            is only
                QX0.0 = IX0.0;

        7)  The StarOffice Word document doc/iC.sdw (or its derivatives)
            provide an introduction to the Programming Language iC.

            There are currently no man pages (on my TODO list) but
            the option -h gives help for all executables and scripts
            including applications generated by icc, eg: a0 -h

        
        Best of luck

        John E. Wulff   02.Mar.2001     <john.wulff@inka.de>

        $Id: README,v 1.2 2001/03/02 22:43:09 jw Exp $

	PS
	The program DemoBox requires Tk800.022 if you have Perl 5.6.0.
	The SuSE Linux 7.1 which I have just installed has Tk800.014
	in combination with Perl 5.6.0. With this constellation, DemoBox
	produces 20 lines of warnings every time a virtual button is
	pressed, which executes $tcp_conn->send_now() from a Tk callback
	function. Tk800.014 has 'require fileevent', which appears
	to go awry. (should use 'use'!!). Strangely the transmissions
	work - the voluminous 'croak' outputs are only warnings.
	
	If you download Tk800-022 from CPAN and install it, DemoBox
	works fine. If you have an older distribution of Perl (5.005)
	this is not necessary.

	I have also downloaded Time::HiRes from CPAN and installed it.
	This allows ICServer and DemoBox to output times between events
	with microsecond resolution using the -m option. See the listings
	for activating this feature.
