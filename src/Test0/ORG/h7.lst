******* ./Test0/h7.ic   ************************
001	/********************************************************************
002	 *
003	 *	simple iC program with arrays
004	 *
005	 *******************************************************************/
006
007	%{
008	%#include	<stdio.h>
009	%}
010
011	%{
012	    int n;					/* { */
013	%}
014
015	if (IX0.7) {					/* { */
016	  for (n = 0; n <= 2; n++) {
017	    printf("%d: Hello world Nr. %d\n", n, 2);
018	  }
019	} else {					/* { */
020	  for (n = 0; n <= 2; n++) {
021	    printf("%d: Good bye Nr. %d\n", n, 2);
022	  }
023	}						/* { */



	_f1_1   G ---{                          // (2)

	iClock  : ---|  _f1_1   G
	IX0.7     ---|

024
025	    if (IX0.0) {
026		printf("%d: Immediate Nr. %d\n", 0, 2);
027	    }


	_f2_1   F ---{                          // (3)

	iClock  : ---|  _f2_1   F
	IX0.0     ---|

028	    if (IX0.1) {
029		printf("%d: Immediate Nr. %d\n", 1, 2);
030	    }


	_f3_1   F ---{                          // (4)

	iClock  : ---|  _f3_1   F
	IX0.1     ---|

031	    if (IX0.2) {
032		printf("%d: Immediate Nr. %d\n", 2, 2);
033	    }


	_f4_1   F ---{                          // (5)

	iClock  : ---|  _f4_1   F
	IX0.2     ---|

034
035	switch (IB1) {					/* { */
036	case 0:
037	  for (n = 0; n <= 2; n++) {
038	    printf("%d: Low Nr. %d\n", n, 0);		/* { */
039	  }
040	    break;
041	case 1:
042	  for (n = 0; n <= 2; n++) {
043	    printf("%d: Med Nr. %d\n", n, 1);		/* { */
044	  }
045	    break;
046	case 2:
047	  for (n = 0; n <= 2; n++) {
048	    printf("%d: Hi  Nr. %d\n", n, 2);		/* { */
049	  }
050	    break;
051	default:
052	  for (n = 0; n <= 2; n++) {
053	    printf("%d: Off Nr. %d\n", n, 99);		/* { */
054	  }
055	    break;
056	}


	_f5_1   I ---(                          // (6)

	iClock  : ---+  _f5_1   I
	IB1     A ---+                  IB1     // 1

******* C CODE          ************************

007
008	    #include	<stdio.h>
009

011
012	    int n;					/* { */
013

015	(2) {					/* { */
016	  for (n = 0; n <= 2; n++) {
017	    printf("%d: Hello world Nr. %d\n", n, 2);
018	  }
019	    }

019	    {					/* { */
020	  for (n = 0; n <= 2; n++) {
021	    printf("%d: Good bye Nr. %d\n", n, 2);
022	  }
023	    }

025	(3) {
026		printf("%d: Immediate Nr. %d\n", 0, 2);
027	    }

028	(4) {
029		printf("%d: Immediate Nr. %d\n", 1, 2);
030	    }

031	(5) {
032		printf("%d: Immediate Nr. %d\n", 2, 2);
033	    }

035	(6) {					/* { */
036	    case 0:
037	  for (n = 0; n <= 2; n++) {
038	    printf("%d: Low Nr. %d\n", n, 0);		/* { */
039	  }
040	    break;
041	    case 1:
042	  for (n = 0; n <= 2; n++) {
043	    printf("%d: Med Nr. %d\n", n, 1);		/* { */
044	  }
045	    break;
046	    case 2:
047	  for (n = 0; n <= 2; n++) {
048	    printf("%d: Hi  Nr. %d\n", n, 2);		/* { */
049	  }
050	    break;
051	    default:
052	  for (n = 0; n <= 2; n++) {
053	    printf("%d: Off Nr. %d\n", n, 99);		/* { */
054	  }
055	    break;
056	    }

******* NET TOPOLOGY    ************************

IB1     [  A  _f5_1+
IX0.0   <     _f2_1|
IX0.1   <     _f3_1|
IX0.2   <     _f4_1|
IX0.7   <     _f1_1|
_f1_1   |  G { (2)
_f2_1   |  F { (3)
_f3_1   |  F { (4)
_f4_1   |  F { (5)
_f5_1   +  I ( (6)
iClock  :  :  _f1_1|  _f2_1|  _f3_1|  _f4_1|  _f5_1+

******* NET STATISTICS  ************************

ARN	+      1 blocks
OR	|      4 blocks
INPW	[      1 blocks
INPX	<      4 blocks
CLK	:      1 blocks

TOTAL	      11 blocks
	      29 links

compiled by:
@(#)     $Id: h7.lst,v 1.1 2015/10/15 06:27:21 jw Exp $ -O7

C OUTPUT: ./Test0/h7.c  (145 lines)
